---
import type { StravaActivity } from "@services/stravaService";
import ActivityMap from "@components/ActivityMap.astro";
import {
  formatRelativeTime,
  formatDuration,
  formatDistance,
} from "@utils/formatUtils";

export interface Props {
  activity: StravaActivity;
}

const { activity } = Astro.props;

const hasGpsData = !!(
  activity.summary_polyline ||
  (activity.start_latlng && activity.start_latlng.length >= 2)
);

// Basic formatting (can be improved later)
const activityDate = formatRelativeTime(new Date(activity.start_date));
const durationFormatted = formatDuration(activity.moving_time);
const distanceFormatted = formatDistance(activity.distance);
const activityType = activity.type || activity.sport_type || "Unknown";
---

<div class="activity-card" data-activity-type={activityType}>
  <h2 class="text-lg font-bold">{activity.name}</h2>
  <div class="grid grid-cols-2 gap-4 md:grid-cols-2 lg:grid-cols-4">
    <p><strong>Date:</strong> {activityDate}</p>
    <p><strong>Duration:</strong> {durationFormatted}</p>
    <p><strong>Distance:</strong> {distanceFormatted}</p>
    <p><strong>Type:</strong> {activity.type} ({activity.sport_type})</p>
  </div>
  {
    hasGpsData ? (
      <ActivityMap activities={[activity]} />
    ) : (
      <p>No GPS data available</p>
    )
  }
</div>

<style>
  .activity-card {
    border: 1px solid #0f0;
    padding: 1.5em;
    margin-bottom: 1.5em;
    background-color: #0a0a0a;
    color: #ccc;
    font-family: "Courier New", Courier, monospace;
    box-shadow: 0 0 10px #0f0;
  }

  .activity-card h2 {
    margin-top: 0;
    margin-bottom: 0.75em;
    color: #0f0;
    text-shadow: 0 0 5px #0f0;
  }

  .activity-card p {
    margin-bottom: 0.5em;
    line-height: 1.6;
    color: #ddd;
  }

  .activity-card p strong {
    color: #0f0;
  }
</style>
